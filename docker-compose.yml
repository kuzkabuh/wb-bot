services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine

  web:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    command: ["bash","-lc","alembic -c app/db/alembic.ini upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"]
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 10

  worker:
    build: .
    env_file: .env
    depends_on:
      - db
      - redis
    command: ["celery","-A","app.tasks.celery_app.celery","worker","-l","INFO"]

  beat:
    build: .
    env_file: .env
    depends_on:
      - redis
    command: ["celery","-A","app.tasks.celery_app.celery","beat","-l","INFO"]

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/web/static:/var/www/static:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro

volumes:
  pg_data:
